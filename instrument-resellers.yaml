openapi: "3.0.2"
info:
  title: Instrumment Resellers
  version: "1.0"
  description: An API to support applications running in the Instrument Resellers SaaS
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
servers:
  - url: https://api.server.test/v1
paths:
  /users/{id}:
    get:
      parameters:
        - in: path
        - name: id
        - required: true
        - schema:
            type: string
        - description: The unique identifier of the user
      responses:
        '200':
          description: Gets a user according to its unique identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getUser
  /users:
    get:
      responses:
        '200':
          description: Gets a list of Users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfUsers'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getPurchases
  /purchases/{id}:
    get:
      parameters:
        - in: path
        - name: id
        - required: true
        - type: string
        - description: The unique identifier of the purchase
      responses:
        '200':
          description: Gets a purchase according to its unique identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getPurchase
  /purchases:
    get:
      responses:
        '200':
          description: Gets a list of Purchases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfPurchases'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getPurchases
  /sellers/{id}:
    get:
      parameters:
        - in: path
        - name: id
        - required: true
        - type: string
        - description: The unique identifier of the seller
      responses:
        '200':
          description: Gets a seller according to its unique identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getSeller
  /sellers:
    get:
      responses:
        '200':
          description: Gets a list of Sellers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSellers'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getSellers
  /instruments:
    get:
      responses:
        '200':
          description: Gets a list of instruments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfInstruments'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getInstruments
  /instruments/{id}:
    get:
      parameters:
        - in: path
        - name: id
        - required: true
        - type: string
        - description: The unique identifier of the instrument
      responses:
        '200':
          description: Gets an instrument according to its unique identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getInstrument
  /instruments/types/{instrument}:
    get:
      parameters:
        - in: path
        - name: instrument
        - required: true
        - type: string
        - description: The name of the instrument to find types for
      summary: Returns the types of a particular instrument
      description: Returns the types of a particular instrument
      produces:
        -application/json
      responses:
        '200':
          description: A list of instruments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getInstrumentTypes
    post:
    put:
    delete:
  /aquisitions/{id}:
    get:
      parameters:
        - in: path
        - name: id
        - required: true
        - type: string
        - description: The unique identifier of the acquisition
      responses:
        '200':
          description: Gets an acquisition according to its unique identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquisition'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getAcquisition
  /aquisitions:
    get:
      responses:
        '200':
          description: Gets a list of acquisitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAcquisitions'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getAcquisitions
  /refurbishments/{id}:
  /refurbishments:
    get:
      responses:
        '200':
          description: Gets a list of acquisitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRefurbishments'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - developers
      operationId: getRefurbishment
    /refurbishments/{id}:
components:
  schemas:
    uuid:
      description: Describes a string the represents a globally unique indentifier
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36
    User:
      description: Describes a user in the system
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          required:
            - firstName
            - lastName
            - email
            - phone
            - userType
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            firstName:
              type: string
              example: Sally
            lastName:
              type: string
              example: Smith
            email:
              type: string
              example: sally.smith@example.com
            phone:
              type: string
              example: 111-222-3333
            userType:
              $ref: '#/components/schemas/UserType'
    ArrayOfUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
    UserType:
      enum: [ 2, 1, 0 ]
      x-enumNames: [ OTHER, BUYER, SELLER ]
    Seller:
      description: Describes a person selling a particular instrument
      allOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Instrument'
        - type: object
          required:
            - saleDate
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            saleDate:
              type: string
              description: The  date when the instrument was sold
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
    ArrayOfSellers:
      type: array
      items:
        $ref: '#/components/schemas/Seller'
    Manufacturer:
      description: Describes the manufacturer of a musical instrument
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          required:
            - name
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            name:
              type: string
              example: Yamaha Instruments
    Address:
      description: Describes a physical geolocation address
      type: object
      properties:
        address_1:
          type: string
          example: 123 Maple Street
        address_2:
          type: string
          example: Unit 1
        city:
          type: string
          example: Anytown
        state_province:
          type: string
          example: CA
        zip_region_code:
          type: string
          example: 90001-1234
    InstrumentType:
      description: Describes the type of the instrument
      type: object
      required:
        - instrument
        - type
      properties:
        instrument:
          type: string
          example: guitar
        type:
          type: string
          example: bass
    Instrument:
      description: An instrument that is avaiable for resale
      allOf:
        - $ref: '#/components/schemas/Manufacturer'
        - $ref: '#/components/schemas/InstrumentType'
        - type: object
          required:
            - name
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            name:
              type: string
              example: Precision Bass
    ArrayOfInstruments:
      type: array
      items:
        $ref: '#/components/schemas/Instrument'
    Purchase:
      description: An purchase is an instrument that has been sold
      allOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Instrument'
        - type: object
          required:
            - date
            - price
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            date:
              type: string
              description: The  date when the instrument was purchased
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
            price:
              type: number
              format: float
              example: 539.50
    ArrayOfPurchases:
      type: array
      items:
        $ref: '#/components/schemas/Purchase'
    Acquisition:
      description: An acquisition is an instrument that has been bought by the company with the intention of being reconditioned for resale
      allOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Instrument'
        - type: object
          required:
            - date
            - price
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            date:
              type: string
              description: The  date when the instrument was purchased
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
            price:
              type: number
              format: float
              example: 539.50
    ArrayOfAcquisitions:
      type: array
      items:
        $ref: '#/components/schemas/Acquisition'
    Refurbishment:
      description: A refurbishment is an acquired instrument that is being repaired to a saleable condition
      allOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Instrument'
        - type: object
          required:
            - date
            - price
          properties:
            id:
              $ref: '#/components/schemas/uuid'
            date:
              type: string
              description: The  date when the instrument was purchased
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
    ArrayOfRefurbishments:
      type: array
      items:
        $ref: '#/components/schemas/Refurbishment'
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: You have an error
        stackTrace:
          type: string
          example: "Error
                    at Object. (/home/cg/root/2523129/main.js:20:11)
                    at Module._compile (module.js:570:32)
                    at Object.Module._extensions..js (module.js:579:10)
                    at Module.load (module.js:487:32)
                    at tryModuleLoad (module.js:446:12)
                    at Function.Module._load (module.js:438:3)
                    at Module.runMain (module.js:604:10)
                    at run (bootstrap_node.js:389:7)
                    at startup (bootstrap_node.js:149:9)
                    at bootstrap_node.js:504:3"


