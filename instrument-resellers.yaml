openapi: "3.0.2"
info:
  title: Instrumment Resellers
  version: "1.0"
  description: An API to support applications running in the Instrument Resellers SaaS
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
servers:
  - url: http://localhost:8088/v1
paths:
  /healthcheck:
    get:
      description: Gets the current healthcheack
      summary: Gets the current healthcheack
      operationId: getHealthCheck
      responses:
        '200':
          description: A HealthCheck
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
  /users:
    get:
      description: Gets a list of Users
      summary: Gets a list of Users
      operationId: getUsers
      responses:
        '200':
          description: A list of Users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfUsers'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
  /users/{id}:
    get:
      tags:
        - reseller
      summary: Find User by ID
      description: Returns a single User
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: ID of the purchase to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  /instruments:
    description: Returns a list of Instruments
    get:
      operationId: getInstruments
      responses:
        '200':
          description: A list of Instruments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfInstruments'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
  /instruments/{id}:
    get:
      tags:
        - reseller
      summary: Find an Instrument by ID
      description: Returns a single Instrument
      operationId: getInstrument
      parameters:
        - name: id
          in: path
          description: ID of the purchase to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
        '400':
          description: Invalid ID supplied
        '404':
          description: Instrument not found
  /acquisitions:
    get:
      description: Returns a list of Acquisitions
      summary: Returns a list of Acquisitions
      operationId: getAcquisitions
      responses:
        '200':
          description: A list of Acquisitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAcquisitions'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
  /acquisitions/{id}:
    get:
      tags:
        - reseller
      summary: Find an Acquisition by ID
      description: Returns a single Acquisition
      operationId: getAcquisition
      parameters:
        - name: id
          in: path
          description: ID of the purchase to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acquisition'
        '400':
          description: Invalid ID supplied
        '404':
          description: Acquisition not found
  /manufacturers:
    get:
      description: Returns a list of Manufacturers
      summary: Returns a list of Manufacturers
      operationId: getManufacturers
      responses:
        '200':
          description: A list of Manufacturers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfManufacturers'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
  /manufacturers/{id}:
    get:
      tags:
        - reseller
      summary: Find an Manufacturers by ID
      description: Returns a single Manufacturer
      operationId: getManufacturer
      parameters:
        - name: id
          in: path
          description: ID of the purchase to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
        '400':
          description: Invalid ID supplied
        '404':
          description: Instrument not found
  /purchases:
    get:
      operationId: getPurchases
      description: Gets a list of Purchases
      summary: Gets a list of Purchases
      responses:
        '200':
          description: A list of Purchases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfPurchases'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
  /purchases/{id}:
    get:
      tags:
        - reseller
      summary: Find Purchase by ID
      description: Returns a single Purchase
      operationId: getPurchase
      parameters:
        - name: id
          in: path
          description: ID of the purchase to return
          required: true
          schema:
            type: number
      responses:
        '200':
          description: A Purchase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
        '400':
          description: Invalid ID supplied
        '404':
          description: Purchase not found
  /refurbishments/{id}:
      get:
        tags:
          - reseller
        summary: Find Purchase by ID
        description: Returns a single Refurbishments
        operationId: getRefurbishment
        parameters:
          - name: id
            in: path
            description: ID of the Refurbishments to return
            required: true
            schema:
              type: number
        responses:
          '200':
            description: successful operation returns a Refurbishment
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Refurbishment'
          '400':
            description: Invalid ID supplied
          '404':
            description: Purchase not found
  /refurbishments:
    get:
      description: Gets a list of Refurbishments
      summary: Gets a list of Refurbishments
      responses:
        '200':
          description: successful operation returns a list of Refurbishments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRefurbishments'
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - reseller
      operationId: getRefurbishments
components:
  schemas:
    uuid:
      description: Describes a string the represents a globally unique indentifier
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36
    User:
      description: Describes a user in the system
      type: object
      required:
        - firstName
        - lastName
        - email
        - phone
        - userType
        - address
      properties:
        id:
          type: number
        firstName:
          type: string
          example: Sally
        lastName:
          type: string
          example: Smith
        email:
          type: string
          example: sally.smith@example.com
        phone:
          type: string
          example: 111-222-3333
        userType:
          $ref: '#/components/schemas/UserType'
        address:
          $ref: '#/components/schemas/Address'
    ArrayOfUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
    UserType:
      enum: [ 2, 1, 0 ]
      x-enumNames: [ OTHER, BUYER, SELLER ]
    Manufacturer:
      description: Describes the manufacturer of a musical instrument
      type: object
      required:
        - name
        - address
      properties:
        id:
          type: number
        address:
          $ref: '#/components/schemas/Address'
        name:
          type: string
          example: Yamaha Instruments
        description:
          type: string
          example: Purveyors of fine instruments worldwide
    ArrayOfManufacturers:
      type: array
      items:
        $ref: '#/components/schemas/Manufacturer'
    Address:
      description: Describes a physical geolocation address
      type: object
      properties:
        address_1:
          type: string
          example: 123 Maple Street
        address_2:
          type: string
          example: Unit 1
        city:
          type: string
          example: Anytown
        state_province:
          type: string
          example: CA
        zip_region_code:
          type: string
          example: 90001-1234
        country:
          type: string
          example: USA
    InstrumentType:
      description: Describes the type of the instrument
      type: object
      required:
        - instrument
        - type
      properties:
        instrument:
          type: string
          example: guitar
        type:
          type: string
          example: bass
    Instrument:
      description: An instrument that is avaiable for resale
      allOf:
        - $ref: '#/components/schemas/InstrumentType'
        - type: object
          required:
            - name
            - manufacturer
          properties:
            id:
              type: number
            name:
              type: string
              example: Precision Bass
            manufacturer:
              $ref: '#/components/schemas/Manufacturer'
    ArrayOfInstruments:
      type: array
      items:
        $ref: '#/components/schemas/Instrument'
    Purchase:
      description: An purchase is an instrument that has been sold
      type: object
      required:
        - date
        - price
        - seller
        - instrument
      properties:
        id:
          type: number
        buyer:
          $ref: '#/components/schemas/User'
        instrument:
          $ref: '#/components/schemas/Instrument'
        purchaseDate:
          type: string
          description: The  date when the instrument was purchased
          format: date-time
          example: "2021-06-20T01:02:03+00:00"
        price:
          type: number
          format: float
          example: 539.50
    ArrayOfPurchases:
      type: array
      items:
        $ref: '#/components/schemas/Purchase'
    Acquisition:
      description: An acquisition is an instrument that has been bought by the company with the intention of being reconditioned for resale
      type: object
      required:
        - date
        - price
        - seller
        - instrument
      properties:
        id:
          type: number
        date:
          type: string
          description: The  date when the instrument was purchased
          format: date-time
          example: "2021-06-20T01:02:03+00:00"
        seller:
          $ref: '#/components/schemas/User'
        instrument:
          $ref: '#/components/schemas/Instrument'
        price:
          type: number
          format: float
          example: 539.50
    ArrayOfAcquisitions:
      type: array
      items:
        $ref: '#/components/schemas/Acquisition'
    Refurbishment:
      description: A refurbishment is an acquired instrument that is being repaired to a saleable condition
      type: object
      required:
        - date
        - price
        - instrument
      properties:
        id:
          type: number
        instrument:
          $ref: '#/components/schemas/Instrument'
        workToBeDone:
          type: string
          description: Describes the work to be done to make the instrument sellable
          example: "Needs a new bridge and intonation needs to be corrected"
        startDate:
          type: string
          description: The  date when the refurbishing was started
          format: date-time
          example: "2021-06-20T01:02:03+00:00"
        finishDate:
          type: string
          description: The  date when the refurbishing was finished
          format: date-time
          example: "2021-07-15T01:02:03+00:00"
    ArrayOfRefurbishments:
      type: array
      items:
        $ref: '#/components/schemas/Refurbishment'
    HealthCheck:
      type: object
      description: Healthcheck information
      required:
        - message
        - date
      properties:
        message:
          type: string
          example: This is a healthcheck
        date:
          type: string
          description: The  date when the healthcheck was called
          format: date-time
          example: "2021-07-15T01:02:03+00:00"
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: You have an error
        stackTrace:
          type: string
          example: "Error
                    at Object. (/home/cg/root/2523129/main.js:20:11)
                    at Module._compile (module.js:570:32)
                    at Object.Module._extensions..js (module.js:579:10)
                    at Module.load (module.js:487:32)
                    at tryModuleLoad (module.js:446:12)
                    at Function.Module._load (module.js:438:3)
                    at Module.runMain (module.js:604:10)
                    at run (bootstrap_node.js:389:7)
                    at startup (bootstrap_node.js:149:9)
                    at bootstrap_node.js:504:3"